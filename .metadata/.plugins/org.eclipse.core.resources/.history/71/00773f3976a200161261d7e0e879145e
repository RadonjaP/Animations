package animation.main;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.util.Random;

import javax.swing.JPanel;

import animation.object.BallObject;

public class AnimationPanel extends JPanel {

	private static final long serialVersionUID = 1L;
	private Random r = new Random();
	private BallObject object = new BallObject(Constants.PANEL_WIDTH / 2 - Constants.OBJECT_BALL_RADIUS,
			Constants.PANEL_HEIGHT / 2 - Constants.OBJECT_BALL_RADIUS);

	public AnimationPanel() {
		this.setSize(Constants.PANEL_WIDTH, Constants.PANEL_HEIGHT);
		this.setVisible(true);
		
		Thread thread = new Thread(new Runnable() {
			
			@Override
			public void run() {
				// Run thread
				int x = 0;
				int y = 0;
				
				while (true)  {
					
					// Count new location
					x = r.nextInt(Constants.PANEL_WIDTH);
					y = r.nextInt(Constants.PANEL_HEIGHT);
					
					while (true) {  // Set condition until location is reached
						
						// Move object
						
						// Draw object
						
						// Sleep
						
					}
					
				}
				
			}
		});
		thread.start();
		
		
	}
	
	public boolean locationReached(Integer x, Integer y) {
		Point currentLoction = object.getCoordinates();
		if (currentLoction.getX() == x && currentLoction.getY() == y)
			
		return false;
	}
	
	
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2D = (Graphics2D) g;
		object.draw(g2D);
	}
	
	public void moveObject(Integer moveX, Integer moveY) {
		object.move(moveX, moveY);
		repaint();
	}
	
}
