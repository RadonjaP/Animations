import java.awt.Point;
import java.util.Random;


public class AlgorithmContainer {

	private Random r = new Random();
	
	private int posX = Settings.PANEL_WIDTH / 2;
	private int posY = Settings.PANEL_HEIGHT / 2;
	
	public Point getAlgorithm() {
		return getNextPositionFluent();
	}
	
	/* Random generated location */
	private Point getNextPositionRandom() {	
		int x = r.nextInt(Settings.RANDOM_NUM_RANGE_X);
		int y = r.nextInt(Settings.RANDOM_NUM_RANGE_Y);
		
		return new Point(x, y);
	}
	
	/* Fluent movement of object */
	private Point getNextPositionFluent() {
		this.posY += Settings.FLUENT_NUM_STEP;
		
		if (this.posY <= 0 || this.posY > Settings.PANEL_HEIGHT - Settings.OBJECT_HEIGHT) {
			Settings.FLUENT_NUM_STEP = -Settings.FLUENT_NUM_STEP;
			this.posY += Settings.FLUENT_NUM_STEP;
		}
		return new Point(this.posX, this.posY);
	}
	
	/* Fluent movement of object on both coordinates */
	private Point getNextPositionXYFluent() {
		boolean coordinatesAllowed = false;
		int x = this.posX;
		int y = this.posY;
		
		while (!coordinatesAllowed) {		
			int side = r.nextInt(4);	
			// Go up
			if (side == 0) {
				y = y + Settings.MOVEMENT_LENGTH;
			} else
			// Go down
			if (side == 1) {
				y = y - Settings.MOVEMENT_LENGTH;
			} else
			// Go left
			if (side == 3) {
				x = x - Settings.MOVEMENT_LENGTH;
			} else {
			// Go right
				x = x + Settings.MOVEMENT_LENGTH;
			}
			
			coordinatesAllowed = validateCoordinates();
			
		}
		return new Point(this.posX, this.posY);
	}
	
	private boolean validateCoordinates() {
		if (this.posX < 0 || this.posX >= Settings.PANEL_WIDTH - Settings.OBJECT_WIDTH) {
			return false;
		} 
		if (this.posY <= 0 || this.posY > Settings.PANEL_HEIGHT - Settings.OBJECT_HEIGHT) {
			return false;
		}
		
		return true;
	}
	
}
