package animation.main;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.util.Random;

import javax.swing.JPanel;

import animation.object.BallObject;
import animation.physicengine.PhysicsEngine;

public class AnimationPanel extends JPanel {

	private static final long serialVersionUID = 1L;
	private Random r = new Random();
	private PhysicsEngine engine = new PhysicsEngine();
	private BallObject object = new BallObject(Constants.PANEL_WIDTH / 2 - Constants.OBJECT_BALL_RADIUS,
			Constants.PANEL_HEIGHT / 2 - Constants.OBJECT_BALL_RADIUS, 0, 0);

	public AnimationPanel() {
		this.setSize(Constants.PANEL_WIDTH, Constants.PANEL_HEIGHT);
		this.setVisible(true);
		
		Thread thread = new Thread(new Runnable() {
			@Override
			public void run() {
				
				while (true)  {
					
					int speedX = r.nextInt(10);
					int speedY = r.nextInt(10);
					
					if (speedX == 0)
						speedX++;
					if (speedY == 0) 
						speedY++;
					
					while (loopNum >= 0) {
						
						Point objectCoordinates = object.getCoordinates();
						Point nextPoint = engine.callAlgorithm(direction, objectCoordinates.x, objectCoordinates.y, speed);
						
						if (nextPoint.x >= Constants.PANEL_WIDTH - Constants.OBJECT_BALL_RADIUS * 2 || nextPoint.x < 0) {
							System.out.println("Invalid location. Axis x out of bounds");
							break;
						}
						if (nextPoint.y >= Constants.PANEL_HEIGHT - Constants.OBJECT_BALL_RADIUS * 2 || nextPoint.y < 0) {
							System.out.println("Invalid location. Axis y out of bounds");
							break;
						}
						
						moveObject(nextPoint.x, nextPoint.y, speed);
						
						
						try {
							Thread.sleep(Constants.ANIMATION_SPEED);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
						
						loopNum--;
					}
				}
			}
		});
		thread.start();
		
		
	}
	
	public boolean locationReached(Integer x, Integer y) {
		Point currentLoction = object.getCoordinates();
		if (currentLoction.getX() == x && currentLoction.getY() == y) {
			return true;
		}	
		return false;
	}
	
	
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2D = (Graphics2D) g;
		object.draw(g2D);
	}
	
	public void moveObject(Integer moveX, Integer moveY, Integer speed) {
		object.move(moveX + speed, moveY + speed);
		repaint();
		System.out.printf("Object moved to (%d,%d) \n",moveX, moveY);
	}
	
}
