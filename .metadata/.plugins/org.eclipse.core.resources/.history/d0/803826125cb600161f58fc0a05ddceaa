package panels;

import java.awt.Color;
import java.awt.Graphics;

import javax.swing.BorderFactory;
import javax.swing.JPanel;

import helpers.Constants;
import helpers.MVector;
import object.BallObject;

public class AnimationPanel extends JPanel {

	private static final long serialVersionUID = 1L;
	private BallObject ball = new BallObject();
	
	public AnimationPanel() {
		
		this.setSize(Constants.PANEL_ANIMATION_WIDTH, Constants.PANEL_ANIMATION_HEIGHT);
		this.setBorder(BorderFactory.createLineBorder(Color.black, 1));
		this.setVisible(true);
		
		Thread animation = new Thread(new Runnable() {
			
			@Override
			public void run() {
				
				
				while (true) {
					
					nextStep();
					
					try {
						Thread.sleep(Constants.SIMULATION_SLEEP_TIME);
					} catch (InterruptedException e) {
						
					}
				}
			
				
			}
		});
		animation.run();
		
	}
	
	private void setObjectProperties() {
		ball.setPosition(new MVector((Integer)Constants.PANEL_ANIMATION_WIDTH / 2, Constants.PANEL_ANIMATION_HEIGHT / 2));
		ball.setAcceleration(new MVector(Constants.OBJECT_ACCELERATION, Constants.OBJECT_ACCELERATION));
		ball.setVelocity(new MVector(Constants.OBJECT_VELOCITY, Constants.OBJECT_VELOCITY));
	}

	private void nextStep() {
		ball.moveObject();
		repaint();
	}
	
	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		ball.drawObject(g);
	}
	
}
